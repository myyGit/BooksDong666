@using Webdiyer.WebControls.Mvc;
@using QX_Frame.Data.DTO;
@{
    PagedList<BookViewModel> bookList = Model as PagedList<BookViewModel>;
    int count = bookList == null ? 0: bookList.Count;
    var user = Session["uid"] == null ? 0 : 1;
}
@{
    string keyword = ViewData["KeyWord"] == null ? null : ViewData["KeyWord"].ToString();
    string jian = ViewData["KeyJian"] == null ? "" : ViewData["KeyJian"].ToString();
    string fan = ViewData["KeyFan"] == null ? "" : ViewData["KeyFan"].ToString();
    int id = ViewData["CategoryId"] == null ? 0 : Convert.ToInt32(ViewData["CategoryId"]);
}
<table class="table table-bordered table-striped" style="margin-top: 10px;display: inline-table;">
    <thead>
        <tr>
            <td>
                题名
            </td>
            <td>
                其他题名
            </td>
            <td>
                卷数
            </td>
            <td>
                朝代
            </td>
            <td>
                责任者
            </td>
            <td>
                分类
            </td>
            <td>
                版本
            </td>
            <td>
                出版社
            </td>
            <td>
                操作
            </td>
        </tr>
    </thead>
    <tbody>
        @{
            if (bookList == null || bookList.Count <= 0)
            {
                <tr>
                    <td colspan="9">未找到符合要求数据</td>
                </tr>
            }
            else
            {
                foreach (var item in bookList)
                {
                    #region 关键字标红
                    switch (id)
                    {
                        case 0: //全部
                            item.Title = (string.IsNullOrEmpty(item.Title) || string.IsNullOrEmpty(jian)) ? item.Title : item.Title.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Title = (string.IsNullOrEmpty(item.Title) || string.IsNullOrEmpty(fan)) ? item.Title : item.Title.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            item.Title2 = (string.IsNullOrEmpty(item.Title2) || string.IsNullOrEmpty(jian)) ? item.Title2 : item.Title2.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Title2 = (string.IsNullOrEmpty(item.Title2) || string.IsNullOrEmpty(fan)) ? item.Title2 : item.Title2.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            item.Publisher = (string.IsNullOrEmpty(item.Publisher) || string.IsNullOrEmpty(jian)) ? item.Version : item.Publisher.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Publisher = (string.IsNullOrEmpty(item.Publisher) || string.IsNullOrEmpty(fan)) ? item.Version : item.Publisher.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            item.Version = (string.IsNullOrEmpty(item.Version) || string.IsNullOrEmpty(jian)) ? item.Version : item.Version.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Version = (string.IsNullOrEmpty(item.Version) || string.IsNullOrEmpty(fan)) ? item.Version : item.Version.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            item.CategoryName = (string.IsNullOrEmpty(item.CategoryName) || string.IsNullOrEmpty(jian)) ? item.CategoryName : item.CategoryName.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.CategoryName = (string.IsNullOrEmpty(item.CategoryName) || string.IsNullOrEmpty(fan)) ? item.CategoryName : item.CategoryName.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            item.Functionary = (string.IsNullOrEmpty(item.Functionary) || string.IsNullOrEmpty(jian)) ? item.Functionary : item.Functionary.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Functionary = (string.IsNullOrEmpty(item.Functionary) || string.IsNullOrEmpty(fan)) ? item.Functionary : item.Functionary.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            item.Dynasty = (string.IsNullOrEmpty(item.Dynasty) || string.IsNullOrEmpty(jian)) ? item.Dynasty : item.Dynasty.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Dynasty = (string.IsNullOrEmpty(item.Dynasty) || string.IsNullOrEmpty(fan)) ? item.Dynasty : item.Dynasty.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            break;
                        case 1: //书名
                            item.Title = (string.IsNullOrEmpty(item.Title) || string.IsNullOrEmpty(jian)) ? item.Title : item.Title.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Title = (string.IsNullOrEmpty(item.Title) || string.IsNullOrEmpty(fan)) ? item.Title : item.Title.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            break;
                        case 2: //责任者
                            item.Functionary = (string.IsNullOrEmpty(item.Functionary) || string.IsNullOrEmpty(jian)) ? item.Functionary : item.Functionary.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Functionary = (string.IsNullOrEmpty(item.Functionary) || string.IsNullOrEmpty(fan)) ? item.Functionary : item.Functionary.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            break;
                        case 3: //出版社
                            item.Publisher = (string.IsNullOrEmpty(item.Publisher) || string.IsNullOrEmpty(jian)) ? item.Version : item.Publisher.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Publisher = (string.IsNullOrEmpty(item.Publisher) || string.IsNullOrEmpty(fan)) ? item.Version : item.Publisher.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            break;
                        case 4: //朝代
                            item.Dynasty = (string.IsNullOrEmpty(item.Dynasty) || string.IsNullOrEmpty(jian)) ? item.Dynasty : item.Dynasty.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Dynasty = (string.IsNullOrEmpty(item.Dynasty) || string.IsNullOrEmpty(fan)) ? item.Dynasty : item.Dynasty.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            break;
                        case 5: //其他名称
                            item.Title2 = (string.IsNullOrEmpty(item.Title2) || string.IsNullOrEmpty(jian)) ? item.Title2 : item.Title2.ToString().Replace(jian, "<span style=\"color:red;\">" + jian + "</span>");
                            item.Title2 = (string.IsNullOrEmpty(item.Title2) || string.IsNullOrEmpty(fan)) ? item.Title2 : item.Title2.ToString().Replace(fan, "<span style=\"color:red;\">" + fan + "</span>");
                            break;
                        default:
                            break;
                    }

                    #endregion
                    <tr class="text-c">
                        <td class="text-l">
                            <a style="cursor:pointer" class="text-primary" href="/Article/Read/@item.BookUid" target="_blank" title="查看">
                            @Html.Raw(item.Title.ToString())</a>
                        </td>
                        <td>@Html.Raw(item.Title2.ToString())</td>
                        <td>@item.Volume</td>
                        <td>@Html.Raw(item.Dynasty.ToString())</td>
                        <td>@Html.Raw(item.Functionary.ToString())</td>
                        <td>@Html.Raw(item.CategoryName.ToString())</td>
                        <td>@Html.Raw(item.Version.ToString())</td>
                        <td>@Html.Raw(item.Publisher.ToString())</td>
                        <td class="f-14 td-manage">
                            <a style="text-decoration:none" href="/Article/Read/@item.BookUid" target="_blank" title="阅读"><i class="Hui-iconfont">&#xe720;</i></a>
                            <a style="text-decoration:none" onclick="Dowm(@item.BookUid,@item.Title)" href="/Article/DownLoadImages/@item.BookUid?title=@item.Title" title="下载" class=""><i class="Hui-iconfont">&#xe641;</i></a>
                        </td>
                    </tr>
                }
            }

        }
    </tbody>
</table>
<div>
    <div style="float:left;width:50%;">当前页 @bookList.CurrentPageIndex 共 @bookList.TotalPageCount 页，共 @bookList.TotalItemCount 条记录 </div>
    @Ajax.Pager(bookList, new PagerOptions
{
    PageIndexParameterName = "pageIndex",
    ActionName = "List",
    HtmlAttributes = new Dictionary<string, object> { { "style", "float:right" } },
    ContainerTagName = "ul",
    CssClass = "pagination",
    CurrentPagerItemTemplate = "<li class=\"active \"><a href=\"javascript:void(0)\">{0}</a></li>",
    DisabledPagerItemTemplate = "<li class=\"disabled\"><a>{0}</a></li>",
    PagerItemTemplate = "<li>{0}</li>",
    Id = "bootstrappager",
    AutoHide = false,
    FirstPageText = "首页",
    NextPageText = "下一页",
    PrevPageText = "上一页",
    LastPageText = "末页"
},
           new MvcAjaxOptions
           {
               UpdateTargetId = "list",         //此为无刷新分页做准备，list为数据表格外层包围的div的id
               HttpMethod = "Post",
               DataFormId = "searchForm"        //此为无刷新搜索做准备，searchForm为搜索的form的id
           })
</div>
<!--请在下方写此页面业务相关的脚本-->
<script type="text/javascript" src="~/lib/My97DatePicker/4.8/WdatePicker.js"></script>
<script type="text/javascript" src="~/lib/datatables/1.10.0/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="~/lib/laypage/1.2/laypage.js"></script>
<script src="~/Scripts/ajaxfileupload.js"></script>
<!--请在下方写此页面业务相关的脚本-->
<script type="text/javascript">
        var user = "@(Session["uid"] == null ? "" : "1")";
        function Dowm(BookUid, Title) {
            if (user == "") {
                alert("请先登录");
                window.location = "@Url.Action("Login","User")";
            } else {
                window.location = "/Article/DownLoadImages/"+BookUid+"?title="+ Title+"";
            }
        }
        function Submit() {
            $("#searchForm").submit();
        }
        /*古籍-阅读*/
        function article_show(title, url, w, h) {
            var index = layer.open({
                type: 2,
                title: title,
                content: url
            });
            layer.full(index);
        }

</script>
<!--_footer 作为公共模版分离出去-->
@*<script type="text/javascript" src="~/lib/jquery/1.9.1/jquery.min.js"></script>*@
<script type="text/javascript" src="~/lib/layer/2.4/layer.js"></script>
<script type="text/javascript" src="~/H-ui/h-ui/js/H-ui.min.js"></script>
<script type="text/javascript" src="~/H-ui//h-ui.admin/js/H-ui.admin.js"></script>
<!--/_footer 作为公共模版分离出去-->
